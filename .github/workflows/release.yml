name: Release
on: 
  push:
    tags:
    - 'v*.*.*'
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v2
    - name: Archive Release
      uses: thedoctor0/zip-release@0.6.2 # last working version
      with:
        type: 'tar'
        filename: 'resources.tar.gz'
        exclusions: '*.git* README.md resources.tar.gz'
    - uses: ncipollo/release-action@v1
      with:
        artifacts: "resources.tar.gz"
        prerelease: true

  build-deb:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get upload url
        id: release_upload_url
        uses: actions/github-script@0.9.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            let tag = context.payload.ref.replace(/.*\//, '');
            let release =  await github.request("GET /repos/:owner/:repo/releases/tags/:tag", {
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: tag
            });
            console.log(release.data.upload_url);
            return release.data.upload_url

      - name: Prepare .deb directories
        run: |
          chmod +x debian/build-deb.sh
          ./debian/build-deb.sh ${{ github.ref }}

      - name: Upload Release Deb
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release_upload_url.outputs.result }}
          asset_path: ${{ steps.deb.outputs.deb }}
          asset_name: ${{ steps.deb.outputs.deb }}
          asset_content_type: application/vnd.debian.binary-package

